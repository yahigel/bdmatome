@page "/counter"
@rendermode InteractiveServer

<PageTitle>Counter</PageTitle>

<EditForm Model="@this" OnValidSubmit="@SearchBirthday">
    <DataAnnotationsValidator />

    <div class="mb-3">
        <label for="birthday" class="form-label">Enter Birthday:</label>
        <InputDate @bind-Value="@inputBirthday" id="birthday" class="form-control" />
        <ValidationMessage For="@(() => inputBirthday)" />
    </div>

    <button type="submit" class="btn btn-primary">Search</button>
</EditForm>

@code {
    private DateTime inputBirthday;
    private Type60? matchedUser;
    private bool searchPerformed = false;

    private async Task SearchBirthday()
    {
        try
        {
            var httpClient = new HttpClient();
            var bdss = await httpClient.GetFromJsonAsync<List<Type60>>("https://localhost:7165/data/60t.json");

            DateTime epoch = new DateTime(1970, 1, 1);
            int daysSinceEpoch = (inputBirthday - epoch).Days;
            int remainder = daysSinceEpoch % 60;

            matchedUser = bdss?.FirstOrDefault(t => t.SixtyType == remainder.ToString());
            searchPerformed = true;
        }
        catch (Exception ex)
        {
            // ここでエラーを処理します（例: ログを記録する）
        }
    }

    public class Type60
    {
        public string SixtyType { get; set; }
        public string TwelveType { get; set; }
        public string InsideType { get; set; }
        public string FocusType { get; set; }
        public string Setume { get; set; }
        public string Ani60 { get; set; }
        public string Ani12 { get; set; }
    }
}